// Generated by CoffeeScript 1.3.3
(function() {
  var Schema, User, UserSchema, bcrypt, config, mongoose, mongooseAuth, validate_email;

  config = require("./config");

  mongoose = require("mongoose");

  bcrypt = require("bcrypt");

  mongooseAuth = require("mongoose-auth");

  mongoose.connect("mongodb://" + config.mongo.host + "/" + config.mongo.database, function(err) {
    if (err) {
      return console.log(err);
    }
  });

  validate_email = function(val) {
    return !val || /^([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})$/i.test(val);
  };

  Schema = mongoose.Schema;

  UserSchema = new Schema({});

  /*
    email: {
      type: String,
      validate: [validate_email, 'email']
    }            
    name: String,
    facebookId: String,
    googleId: String,
    salt: String,
    password: String
  }
  */


  UserSchema.plugin(mongooseAuth, {
    everymodule: {
      everyauth: {
        User: function() {
          return User;
        }
      }
    },
    facebook: {
      everyauth: {
        myHostname: config.hostname,
        appId: config.facebook.appId,
        appSecret: config.facebook.appSecret,
        redirectPath: '/'
      }
    },
    google: {
      everyauth: {
        myHostname: config.hostname,
        appId: config.google.appId,
        appSecret: config.google.appSecret,
        redirectPath: '/',
        scope: 'https://www.googleapis.com/auth/userinfo.profile'
      }
    },
    password: {
      loginWith: 'email',
      everyauth: {
        getLoginPath: '/login',
        postLoginPath: '/login',
        getRegisterPath: '/register',
        postRegisterPath: '/register',
        loginSuccessRedirect: '/',
        registerSuccessRedirect: '/'
      }
    }
  });

  UserSchema.pre('save', function(next) {
    var login_type;
    console.log("pre save: " + this);
    login_type = this.email.split(':', 1);
    if (login_type) {
      this.name = this[login_type].name;
    }
    return next();
  });

  User = mongoose.model('User', UserSchema);

  module.exports = {
    User: User
  };

}).call(this);
